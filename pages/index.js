import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState } from 'react';
import { ethers } from "ethers";
const HARDHAT_NETWORK_ID = '31337';



const _connectWallet = async (setAddress) => {
  const [selectedAddress] = await window.ethereum.enable();
  setAddress(selectedAddress)
  window.ethereum.on("accountsChanged", ([newAddress]) => {
    console.log("connected to ", newAddress)
    // `accountsChanged` event can be triggered with an undefined newAddress.
    // This happens when the user removes the Dapp from the "Connected
    // list of sites allowed access to your addresses" (Metamask > Settings > Connections)
    // To avoid errors, we reset the dapp state 
    if (newAddress === undefined) {
      console.log("not connected")
    }
    setAddress(selectedAddress)
  });
}

export default function Home({ data }) {
  const [address, setAddress] = useState(null)
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to connect wallet
        </h1>

        <button onClick={() => { _connectWallet(setAddress) }}>
          Connect wallet
        </button>

        {address}

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export async function getStaticProps() {



  return {
    props: {
      data: [
        {
          title: "cool stuff"
        }
      ]
    }, // will be passed to the page component as props
  }
}